name: Linting and Tests

on:
  pull_request:
    branches:
      - main

jobs:
  rust-linting-and-tests:
    name: Rust Linting and Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # # Cache the cargo registry to speed up the build
      # # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
      # - uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       target/
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt,clippy
          
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      # - name: Cache Ubuntu Dependencies
      #   uses: actions/cache@v4
      #   id: cache-ubuntu-deps
      #   with:
      #     path: /var/cache/apt
      #     key: ${{ runner.os }}-apt

      - name: Install Ubuntu Dependencies
        if: steps.cache-ubuntu-deps.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          libappindicator3-dev \
          librsvg2-dev \
          patchelf

      - name: Check Rust formatting
        working-directory: desktop/src-tauri
        run: cargo fmt --check

      - name: Run Clippy Linting for own code
        working-directory: desktop/src-tauri
        run: clippy --no-deps

      - name: Run tests
        working-directory: desktop/src-tauri
        run: cargo test

  frontend-linting-and-tests:
    name: Frontend Linting and Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24.4.1"
          cache: "pnpm"
          cache-dependency-path: desktop/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: desktop
        run: pnpm install --frozen-lockfile

      - name: Check prettier formatting
        working-directory: desktop
        run: pnpm prettier --check .

      - name: Run tests
        working-directory: desktop
        run: pnpm test

      - name: Build
        working-directory: desktop
        run: pnpm build
